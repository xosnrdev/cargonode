#!/bin/bash

# This script builds a cargonode release for the aarch64-apple-darwin target.
# At time of writing, GitHub Actions does not offer Apple silicon runners
# for free. Since you have an M2 Mac mini, you use this script locally
# to build the release tarball and upload it with `gh`.
#
# Once GitHub Actions has proper support for Apple silicon, we can add it
# to our release workflow and drop this script.

set -e

version="$1"
if [[ -z ${version} ]]; then
	echo "missing version" >&2
	echo "Usage: $(basename "$0") <version>" >&2
	exit 1
fi
if ! grep -q "version = \"${version}\"" Cargo.toml; then
	echo "version does not match Cargo.toml" >&2
	exit 1
fi

target=aarch64-apple-darwin
cargo build --release --target "${target}"
BIN="target/${target}/release/cargonode"
NAME="cargonode-${version}-${target}"

# We'll store our release artifacts in the deployment/m2/ directory
RELEASE_DIR="deployment/m2"
ARCHIVE_DIR="${RELEASE_DIR}/${NAME}"
ARCHIVE_FILE="${NAME}.tar.gz"
ARCHIVE_PATH="${RELEASE_DIR}/${ARCHIVE_FILE}"

mkdir -p "${ARCHIVE_DIR}/doc"
cp "${BIN}" "${ARCHIVE_DIR}/"
strip "${ARCHIVE_DIR}/cargonode"

# Copy license/readme docs
cp {README.md,LICENSE-MIT,LICENSE-APACHE} "${ARCHIVE_DIR}/"
cp CHANGELOG.md "${ARCHIVE_DIR}/doc/"

# Create the tar.gz archive
tar -C "${RELEASE_DIR}" -zcf "${ARCHIVE_PATH}" "${NAME}"

# Generate the SHA-256 checksum file referencing only the bare filename
pushd "${RELEASE_DIR}" >/dev/null
shasum -a 256 "${ARCHIVE_FILE}" >"${ARCHIVE_FILE}.sha256"
popd >/dev/null

# Upload both the tar.gz and the .sha256 to GitHub
gh release upload "${version}" "${ARCHIVE_PATH}" "${ARCHIVE_PATH}.sha256"
